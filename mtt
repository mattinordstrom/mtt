#!/bin/bash

# scriptType; description; params...
declare -A scripts
scripts[base64]="stringScripts;Encode/decode base64 string.;string;";
scripts[sortcc]="stringScripts;Sorts the clipboard content.;";

scripts[portuse]="statScripts;Display which process is using specific port.;port"
scripts[topcpu]="statScripts;Displays top CPU usage."
scripts[topmem]="statScripts;Displays top MEM usage."

scripts[localkafka]="devScripts;Starts local kafka server."


if [ $# -eq 0 ]; then
  printf "No arguments. Use mtt -h to see available commands"
elif [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
  printf "\n"
  tput bold; tput setaf 2; printf "##### MTT - Mattis Terminal Toolkit #####\n"; tput sgr0;
  printf "\n"
  printf "USAGE:\n"
  printf "\n"
  printf "  -h, --help           Shows this help\n\n"
  printf "String handling:\n"
  for key in "${!scripts[@]}";
  do
    value=${scripts[$key]}
    IFS=";" read -r -a arr <<< "${value}"
    scriptType="${arr[0]}"
    description="${arr[1]}"
    param="${arr[2]}"
    if [ "$scriptType" = "stringScripts" ]; then
      if [ -z "$param" ]; then
        printf "  mtt %s           $description\n" "$key"
      else
        printf "  mtt %s <%s>  $description\n" "$key" "$param"
      fi
    fi
  done
  printf "\n"
  printf "Stats:\n" 
  for key in "${!scripts[@]}";
  do
    value=${scripts[$key]}
    IFS=";" read -r -a arr <<< "${value}"
    scriptType="${arr[0]}"
    description="${arr[1]}"
    param="${arr[2]}"
    if [ "$scriptType" = "statScripts" ]; then
      if [ -z "$param" ]; then
        printf "  mtt %s           $description\n" "$key"
      else
        printf "  mtt %s <%s>   $description\n" "$key" "$param"
      fi
    fi
  done
  printf "\n"
  printf "Dev tools:\n"  
  for key in "${!scripts[@]}";
  do
    value=${scripts[$key]}
    IFS=";" read -r -a arr <<< "${value}"
    scriptType="${arr[0]}"
    description="${arr[1]}"
    param="${arr[2]}"
    if [ "$scriptType" = "devScripts" ]; then
      if [ -z "$param" ]; then
        printf "  mtt %s       $description\n" "$key"
      else
        printf "  mtt %s <%s>   $description\n" "$key" "$param"
      fi
    fi
  done
else
  validScript=false
  for key in "${!scripts[@]}"; 
  do
    if [ "$1" = "$key" ]; then
      validScript=true
    fi
  done
  if [ "$validScript" = true ]; then
    "$(dirname "$0")"/mtt_scripts/"$1" "$2" "$3"
  else
    printf "Invalid arguments. Use mtt -h to see available commands"
  fi
fi

printf "\n"
