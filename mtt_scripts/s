#!/bin/bash


# To make script run at login add file terminator.desktop (https://github.com/mattinordstrom/gists/blob/main/terminator.desktop) to ~/.config/autostart
# Exec=terminator -e 'zsh -c "cd /home/"$USER"/projects_priv/mtt/ && ./mtt s; exec zsh"'

neofetch --off --color_blocks off --disable wm theme icons kernel uptime packages resolution term --memory_unit gib --bold off

#######################################################

echo "----------------------------------"
echo " "
echo "Wireless: "
ip addr | grep wlp -A 3 | grep "inet "
echo "Network cable: "
ip addr | grep enp -A 3 | grep "inet "

#######################################################

echo " "
echo "----------------------------------"
echo " "
hist_output=$(cat ~/.zsh_history | grep "sudo apt upgrade")
echo "APT last upgrade: "

last_upgraded=""
while IFS= read -r line; do
    # Ignore lines containing ".zsh_history"
    if [[ "$line" != *".zsh_history"* ]]; then
        last_upgraded="$line"
    fi
done <<< "$hist_output"

timestamp=$(echo "$last_upgraded" | grep -oP '(?<=: )[0-9]+(?=:)')
readable_date_time=$(date -d @"$timestamp" '+%Y-%m-%d %H:%M:%S')
readable_date=$(date -d @"$timestamp" '+%Y-%m-%d')


today_seconds=$(date '+%s')
readable_date_seconds=$(date -d "$readable_date" '+%s')

difference_days=$(( ($today_seconds - $readable_date_seconds) / 86400 ))

if [ "$difference_days" -lt 2 ]; then
    echo -e "$readable_date_time \e[1;32mUpdated recently!\e[0m"
elif [ "$difference_days" -lt 4 ]; then
    echo -e "$readable_date_time \e[1;33m$difference_days days ago!\e[0m"
else
    echo -e "$readable_date_time \e[1;31m$difference_days days ago!\e[0m"
fi